services:

  nginx:
    image: nginx
    volumes:
     - ./services/nginx:/etc/nginx/templates
     - ./services/nginx/certs:/etc/nginx/certs
    environment:
      TZ: "Europe/Moscow"
    ports:
     - "443:443"
     - "80:80"
    links:
     - web
    depends_on:
     - web

  web:
    image: appsec4u/web:TAG
    command: python app.py
    volumes:
      - /var/tmp:/var/tmp
      - ./key:/key
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
           
  redis:
    image: redis:6-alpine
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    environment:
      TZ: "Europe/Moscow"
    # ports:
    #   - "6379:6379"
    
  worker:
    image: appsec4u/worker:TAG
    command: python work.py
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/tmp:/var/tmp
      - ./key:/key
    env_file:
      - .env
    depends_on:
      - redis
      - postgres

  worker_admin:
    image: appsec4u/worker:TAG
    command: python work_admin.py
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/tmp:/var/tmp
      - ./key:/key
    env_file:
      - .env
    depends_on:
      - redis
      - postgres

  celery_beat:
    image: appsec4u/worker:TAG
    command: /app/run_beat
    volumes:
      - ./key:/key
    env_file:
      - .env
    depends_on:
      - redis
      - postgres

  postgres:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      TZ: "Europe/Moscow"
      POSTGRES_DB: ${PS_DATABASE_NAME}
      POSTGRES_USER: ${PS_DATABASE_USER}
      POSTGRES_PASSWORD: ${PS_DATABASE_PASSWORD}
    # ports:
    #   - "5432:5432"

  seaweedfs:
    image: chrislusf/seaweedfs
    command: ["server", "-s3", "-dir=/tmp", "-volume.fileSizeLimitMB 5000", "-volume.minFreeSpace 5GiB"]
    volumes:
      - seaweedfs_data:/tmp
    environment:
      TZ: "Europe/Moscow"
    # ports:
    #   - "8080:8080"
    #   - "9333:9333"

volumes:
  postgres_data:
  seaweedfs_data: